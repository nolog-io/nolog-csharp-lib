// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: auth/auth_spec.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace io.nolog.net.api.auth {

  /// <summary>Holder for reflection information generated from auth/auth_spec.proto</summary>
  public static partial class AuthSpecReflection {

    #region Descriptor
    /// <summary>File descriptor for auth/auth_spec.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthSpecReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRhdXRoL2F1dGhfc3BlYy5wcm90bxIDYXBpInAKCUNsaWVudEtleRIxCgpr",
            "ZXlfZmllbGRzGAEgAygLMh0uYXBpLkNsaWVudEtleS5LZXlGaWVsZHNFbnRy",
            "eRowCg5LZXlGaWVsZHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBIn4KCktleUNvbnRlbnQSOgoOY29udGVudF9maWVsZHMYASADKAsy",
            "Ii5hcGkuS2V5Q29udGVudC5Db250ZW50RmllbGRzRW50cnkaNAoSQ29udGVu",
            "dEZpZWxkc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi",
            "mAYKFEludGVybmFsQXV0aE1ldGFkYXRhEjUKCWF1dGhfdHlwZRgBIAEoDjIi",
            "LmFwaS5JbnRlcm5hbEF1dGhNZXRhZGF0YS5BdXRoVHlwZRIRCgljbGllbnRf",
            "aWQYAiABKAkSFQoLcGFzc3Rocm91Z2gYAyABKAhIABIRCgdhcGlfa2V5GAQg",
            "ASgISAASNwoJdXNlcl9hdXRoGAUgASgLMiIuYXBpLkludGVybmFsQXV0aE1l",
            "dGFkYXRhLlVzZXJBdXRoSAAaggQKCFVzZXJBdXRoEkcKDnVzZXJfYXV0aF90",
            "eXBlGAIgASgOMi8uYXBpLkludGVybmFsQXV0aE1ldGFkYXRhLlVzZXJBdXRo",
            "LlVzZXJBdXRoVHlwZRJICglzYW1sX3VzZXIYAyABKAsyMy5hcGkuSW50ZXJu",
            "YWxBdXRoTWV0YWRhdGEuVXNlckF1dGguU0FNTFVzZXJNZXRhZGF0YUgAEkYK",
            "CGdjcF91c2VyGAQgASgLMjIuYXBpLkludGVybmFsQXV0aE1ldGFkYXRhLlVz",
            "ZXJBdXRoLkdDUFVzZXJNZXRhZGF0YUgAEkgKCmFkbWluX3VzZXIYBSABKAsy",
            "Mi5hcGkuSW50ZXJuYWxBdXRoTWV0YWRhdGEuVXNlckF1dGguR0NQVXNlck1l",
            "dGFkYXRhSAAaPwoQU0FNTFVzZXJNZXRhZGF0YRIQCgh1c2VybmFtZRgBIAEo",
            "CRIZChFsYXN0X3ZhbGlkYXRlZF9hdBgCIAEoAxpRCg9HQ1BVc2VyTWV0YWRh",
            "dGESEAoIdXNlcm5hbWUYASABKAkSGQoRbGFzdF92YWxpZGF0ZWRfYXQYAiAB",
            "KAMSEQoJand0X3Rva2VuGAMgASgJIiwKDFVzZXJBdXRoVHlwZRIJCgVBRE1J",
            "ThAAEggKBFNBTUwQARIHCgNHQ1AQAkIPCg11c2VyX21ldGFkYXRhIj0KCEF1",
            "dGhUeXBlEg8KC1BBU1NUSFJPVUdIEAASCwoHQVBJX0tFWRABEgkKBUFETUlO",
            "EAISCAoEVVNFUhADQg8KDWF1dGhfbWV0YWRhdGFCRgoVaW8ubm9sb2cubmV0",
            "LmFwaS5hdXRoWhVpby9ub2xvZy9uZXQvYXBpL2F1dGiqAhVpby5ub2xvZy5u",
            "ZXQuYXBpLmF1dGhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::io.nolog.net.api.auth.ClientKey), global::io.nolog.net.api.auth.ClientKey.Parser, new[]{ "KeyFields" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::io.nolog.net.api.auth.KeyContent), global::io.nolog.net.api.auth.KeyContent.Parser, new[]{ "ContentFields" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::io.nolog.net.api.auth.InternalAuthMetadata), global::io.nolog.net.api.auth.InternalAuthMetadata.Parser, new[]{ "AuthType", "ClientId", "Passthrough", "ApiKey", "UserAuth" }, new[]{ "AuthMetadata" }, new[]{ typeof(global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth), global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Parser, new[]{ "UserAuthType", "SamlUser", "GcpUser", "AdminUser" }, new[]{ "UserMetadata" }, new[]{ typeof(global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata), global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata.Parser, new[]{ "Username", "LastValidatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata), global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata.Parser, new[]{ "Username", "LastValidatedAt", "JwtToken" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// API Key
  /// </summary>
  public sealed partial class ClientKey : pb::IMessage<ClientKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientKey> _parser = new pb::MessageParser<ClientKey>(() => new ClientKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::io.nolog.net.api.auth.AuthSpecReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientKey(ClientKey other) : this() {
      keyFields_ = other.keyFields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientKey Clone() {
      return new ClientKey(this);
    }

    /// <summary>Field number for the "key_fields" field.</summary>
    public const int KeyFieldsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_keyFields_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> keyFields_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> KeyFields {
      get { return keyFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!KeyFields.Equals(other.KeyFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= KeyFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      keyFields_.WriteTo(output, _map_keyFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      keyFields_.WriteTo(ref output, _map_keyFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keyFields_.CalculateSize(_map_keyFields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientKey other) {
      if (other == null) {
        return;
      }
      keyFields_.Add(other.keyFields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keyFields_.AddEntriesFrom(input, _map_keyFields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            keyFields_.AddEntriesFrom(ref input, _map_keyFields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyContent : pb::IMessage<KeyContent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyContent> _parser = new pb::MessageParser<KeyContent>(() => new KeyContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::io.nolog.net.api.auth.AuthSpecReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyContent(KeyContent other) : this() {
      contentFields_ = other.contentFields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyContent Clone() {
      return new KeyContent(this);
    }

    /// <summary>Field number for the "content_fields" field.</summary>
    public const int ContentFieldsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_contentFields_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> contentFields_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ContentFields {
      get { return contentFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ContentFields.Equals(other.ContentFields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ContentFields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      contentFields_.WriteTo(output, _map_contentFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      contentFields_.WriteTo(ref output, _map_contentFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += contentFields_.CalculateSize(_map_contentFields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyContent other) {
      if (other == null) {
        return;
      }
      contentFields_.Add(other.contentFields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            contentFields_.AddEntriesFrom(input, _map_contentFields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            contentFields_.AddEntriesFrom(ref input, _map_contentFields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Auth Session Metadata
  /// </summary>
  public sealed partial class InternalAuthMetadata : pb::IMessage<InternalAuthMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InternalAuthMetadata> _parser = new pb::MessageParser<InternalAuthMetadata>(() => new InternalAuthMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InternalAuthMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::io.nolog.net.api.auth.AuthSpecReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InternalAuthMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InternalAuthMetadata(InternalAuthMetadata other) : this() {
      authType_ = other.authType_;
      clientId_ = other.clientId_;
      switch (other.AuthMetadataCase) {
        case AuthMetadataOneofCase.Passthrough:
          Passthrough = other.Passthrough;
          break;
        case AuthMetadataOneofCase.ApiKey:
          ApiKey = other.ApiKey;
          break;
        case AuthMetadataOneofCase.UserAuth:
          UserAuth = other.UserAuth.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InternalAuthMetadata Clone() {
      return new InternalAuthMetadata(this);
    }

    /// <summary>Field number for the "auth_type" field.</summary>
    public const int AuthTypeFieldNumber = 1;
    private global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType authType_ = global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType.Passthrough;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType AuthType {
      get { return authType_; }
      set {
        authType_ = value;
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passthrough" field.</summary>
    public const int PassthroughFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Passthrough {
      get { return authMetadataCase_ == AuthMetadataOneofCase.Passthrough ? (bool) authMetadata_ : false; }
      set {
        authMetadata_ = value;
        authMetadataCase_ = AuthMetadataOneofCase.Passthrough;
      }
    }

    /// <summary>Field number for the "api_key" field.</summary>
    public const int ApiKeyFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ApiKey {
      get { return authMetadataCase_ == AuthMetadataOneofCase.ApiKey ? (bool) authMetadata_ : false; }
      set {
        authMetadata_ = value;
        authMetadataCase_ = AuthMetadataOneofCase.ApiKey;
      }
    }

    /// <summary>Field number for the "user_auth" field.</summary>
    public const int UserAuthFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth UserAuth {
      get { return authMetadataCase_ == AuthMetadataOneofCase.UserAuth ? (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth) authMetadata_ : null; }
      set {
        authMetadata_ = value;
        authMetadataCase_ = value == null ? AuthMetadataOneofCase.None : AuthMetadataOneofCase.UserAuth;
      }
    }

    private object authMetadata_;
    /// <summary>Enum of possible cases for the "auth_metadata" oneof.</summary>
    public enum AuthMetadataOneofCase {
      None = 0,
      Passthrough = 3,
      ApiKey = 4,
      UserAuth = 5,
    }
    private AuthMetadataOneofCase authMetadataCase_ = AuthMetadataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthMetadataOneofCase AuthMetadataCase {
      get { return authMetadataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuthMetadata() {
      authMetadataCase_ = AuthMetadataOneofCase.None;
      authMetadata_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InternalAuthMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InternalAuthMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthType != other.AuthType) return false;
      if (ClientId != other.ClientId) return false;
      if (Passthrough != other.Passthrough) return false;
      if (ApiKey != other.ApiKey) return false;
      if (!object.Equals(UserAuth, other.UserAuth)) return false;
      if (AuthMetadataCase != other.AuthMetadataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType.Passthrough) hash ^= AuthType.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (authMetadataCase_ == AuthMetadataOneofCase.Passthrough) hash ^= Passthrough.GetHashCode();
      if (authMetadataCase_ == AuthMetadataOneofCase.ApiKey) hash ^= ApiKey.GetHashCode();
      if (authMetadataCase_ == AuthMetadataOneofCase.UserAuth) hash ^= UserAuth.GetHashCode();
      hash ^= (int) authMetadataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType.Passthrough) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AuthType);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.Passthrough) {
        output.WriteRawTag(24);
        output.WriteBool(Passthrough);
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.ApiKey) {
        output.WriteRawTag(32);
        output.WriteBool(ApiKey);
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.UserAuth) {
        output.WriteRawTag(42);
        output.WriteMessage(UserAuth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType.Passthrough) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AuthType);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.Passthrough) {
        output.WriteRawTag(24);
        output.WriteBool(Passthrough);
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.ApiKey) {
        output.WriteRawTag(32);
        output.WriteBool(ApiKey);
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.UserAuth) {
        output.WriteRawTag(42);
        output.WriteMessage(UserAuth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType.Passthrough) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AuthType);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.Passthrough) {
        size += 1 + 1;
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.ApiKey) {
        size += 1 + 1;
      }
      if (authMetadataCase_ == AuthMetadataOneofCase.UserAuth) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAuth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InternalAuthMetadata other) {
      if (other == null) {
        return;
      }
      if (other.AuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType.Passthrough) {
        AuthType = other.AuthType;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      switch (other.AuthMetadataCase) {
        case AuthMetadataOneofCase.Passthrough:
          Passthrough = other.Passthrough;
          break;
        case AuthMetadataOneofCase.ApiKey:
          ApiKey = other.ApiKey;
          break;
        case AuthMetadataOneofCase.UserAuth:
          if (UserAuth == null) {
            UserAuth = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth();
          }
          UserAuth.MergeFrom(other.UserAuth);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AuthType = (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType) input.ReadEnum();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            Passthrough = input.ReadBool();
            break;
          }
          case 32: {
            ApiKey = input.ReadBool();
            break;
          }
          case 42: {
            global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth();
            if (authMetadataCase_ == AuthMetadataOneofCase.UserAuth) {
              subBuilder.MergeFrom(UserAuth);
            }
            input.ReadMessage(subBuilder);
            UserAuth = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AuthType = (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.AuthType) input.ReadEnum();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            Passthrough = input.ReadBool();
            break;
          }
          case 32: {
            ApiKey = input.ReadBool();
            break;
          }
          case 42: {
            global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth();
            if (authMetadataCase_ == AuthMetadataOneofCase.UserAuth) {
              subBuilder.MergeFrom(UserAuth);
            }
            input.ReadMessage(subBuilder);
            UserAuth = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InternalAuthMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AuthType {
        [pbr::OriginalName("PASSTHROUGH")] Passthrough = 0,
        [pbr::OriginalName("API_KEY")] ApiKey = 1,
        [pbr::OriginalName("ADMIN")] Admin = 2,
        [pbr::OriginalName("USER")] User = 3,
      }

      public sealed partial class UserAuth : pb::IMessage<UserAuth>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UserAuth> _parser = new pb::MessageParser<UserAuth>(() => new UserAuth());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UserAuth> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::io.nolog.net.api.auth.InternalAuthMetadata.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserAuth() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserAuth(UserAuth other) : this() {
          userAuthType_ = other.userAuthType_;
          switch (other.UserMetadataCase) {
            case UserMetadataOneofCase.SamlUser:
              SamlUser = other.SamlUser.Clone();
              break;
            case UserMetadataOneofCase.GcpUser:
              GcpUser = other.GcpUser.Clone();
              break;
            case UserMetadataOneofCase.AdminUser:
              AdminUser = other.AdminUser.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserAuth Clone() {
          return new UserAuth(this);
        }

        /// <summary>Field number for the "user_auth_type" field.</summary>
        public const int UserAuthTypeFieldNumber = 2;
        private global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType userAuthType_ = global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType.Admin;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType UserAuthType {
          get { return userAuthType_; }
          set {
            userAuthType_ = value;
          }
        }

        /// <summary>Field number for the "saml_user" field.</summary>
        public const int SamlUserFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata SamlUser {
          get { return userMetadataCase_ == UserMetadataOneofCase.SamlUser ? (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata) userMetadata_ : null; }
          set {
            userMetadata_ = value;
            userMetadataCase_ = value == null ? UserMetadataOneofCase.None : UserMetadataOneofCase.SamlUser;
          }
        }

        /// <summary>Field number for the "gcp_user" field.</summary>
        public const int GcpUserFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata GcpUser {
          get { return userMetadataCase_ == UserMetadataOneofCase.GcpUser ? (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata) userMetadata_ : null; }
          set {
            userMetadata_ = value;
            userMetadataCase_ = value == null ? UserMetadataOneofCase.None : UserMetadataOneofCase.GcpUser;
          }
        }

        /// <summary>Field number for the "admin_user" field.</summary>
        public const int AdminUserFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata AdminUser {
          get { return userMetadataCase_ == UserMetadataOneofCase.AdminUser ? (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata) userMetadata_ : null; }
          set {
            userMetadata_ = value;
            userMetadataCase_ = value == null ? UserMetadataOneofCase.None : UserMetadataOneofCase.AdminUser;
          }
        }

        private object userMetadata_;
        /// <summary>Enum of possible cases for the "user_metadata" oneof.</summary>
        public enum UserMetadataOneofCase {
          None = 0,
          SamlUser = 3,
          GcpUser = 4,
          AdminUser = 5,
        }
        private UserMetadataOneofCase userMetadataCase_ = UserMetadataOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserMetadataOneofCase UserMetadataCase {
          get { return userMetadataCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUserMetadata() {
          userMetadataCase_ = UserMetadataOneofCase.None;
          userMetadata_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UserAuth);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UserAuth other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserAuthType != other.UserAuthType) return false;
          if (!object.Equals(SamlUser, other.SamlUser)) return false;
          if (!object.Equals(GcpUser, other.GcpUser)) return false;
          if (!object.Equals(AdminUser, other.AdminUser)) return false;
          if (UserMetadataCase != other.UserMetadataCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserAuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType.Admin) hash ^= UserAuthType.GetHashCode();
          if (userMetadataCase_ == UserMetadataOneofCase.SamlUser) hash ^= SamlUser.GetHashCode();
          if (userMetadataCase_ == UserMetadataOneofCase.GcpUser) hash ^= GcpUser.GetHashCode();
          if (userMetadataCase_ == UserMetadataOneofCase.AdminUser) hash ^= AdminUser.GetHashCode();
          hash ^= (int) userMetadataCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UserAuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType.Admin) {
            output.WriteRawTag(16);
            output.WriteEnum((int) UserAuthType);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.SamlUser) {
            output.WriteRawTag(26);
            output.WriteMessage(SamlUser);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.GcpUser) {
            output.WriteRawTag(34);
            output.WriteMessage(GcpUser);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.AdminUser) {
            output.WriteRawTag(42);
            output.WriteMessage(AdminUser);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UserAuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType.Admin) {
            output.WriteRawTag(16);
            output.WriteEnum((int) UserAuthType);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.SamlUser) {
            output.WriteRawTag(26);
            output.WriteMessage(SamlUser);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.GcpUser) {
            output.WriteRawTag(34);
            output.WriteMessage(GcpUser);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.AdminUser) {
            output.WriteRawTag(42);
            output.WriteMessage(AdminUser);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserAuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType.Admin) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserAuthType);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.SamlUser) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SamlUser);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.GcpUser) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcpUser);
          }
          if (userMetadataCase_ == UserMetadataOneofCase.AdminUser) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdminUser);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UserAuth other) {
          if (other == null) {
            return;
          }
          if (other.UserAuthType != global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType.Admin) {
            UserAuthType = other.UserAuthType;
          }
          switch (other.UserMetadataCase) {
            case UserMetadataOneofCase.SamlUser:
              if (SamlUser == null) {
                SamlUser = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata();
              }
              SamlUser.MergeFrom(other.SamlUser);
              break;
            case UserMetadataOneofCase.GcpUser:
              if (GcpUser == null) {
                GcpUser = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata();
              }
              GcpUser.MergeFrom(other.GcpUser);
              break;
            case UserMetadataOneofCase.AdminUser:
              if (AdminUser == null) {
                AdminUser = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata();
              }
              AdminUser.MergeFrom(other.AdminUser);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 16: {
                UserAuthType = (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType) input.ReadEnum();
                break;
              }
              case 26: {
                global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata();
                if (userMetadataCase_ == UserMetadataOneofCase.SamlUser) {
                  subBuilder.MergeFrom(SamlUser);
                }
                input.ReadMessage(subBuilder);
                SamlUser = subBuilder;
                break;
              }
              case 34: {
                global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata();
                if (userMetadataCase_ == UserMetadataOneofCase.GcpUser) {
                  subBuilder.MergeFrom(GcpUser);
                }
                input.ReadMessage(subBuilder);
                GcpUser = subBuilder;
                break;
              }
              case 42: {
                global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata();
                if (userMetadataCase_ == UserMetadataOneofCase.AdminUser) {
                  subBuilder.MergeFrom(AdminUser);
                }
                input.ReadMessage(subBuilder);
                AdminUser = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 16: {
                UserAuthType = (global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.UserAuthType) input.ReadEnum();
                break;
              }
              case 26: {
                global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.SAMLUserMetadata();
                if (userMetadataCase_ == UserMetadataOneofCase.SamlUser) {
                  subBuilder.MergeFrom(SamlUser);
                }
                input.ReadMessage(subBuilder);
                SamlUser = subBuilder;
                break;
              }
              case 34: {
                global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata();
                if (userMetadataCase_ == UserMetadataOneofCase.GcpUser) {
                  subBuilder.MergeFrom(GcpUser);
                }
                input.ReadMessage(subBuilder);
                GcpUser = subBuilder;
                break;
              }
              case 42: {
                global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata subBuilder = new global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Types.GCPUserMetadata();
                if (userMetadataCase_ == UserMetadataOneofCase.AdminUser) {
                  subBuilder.MergeFrom(AdminUser);
                }
                input.ReadMessage(subBuilder);
                AdminUser = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the UserAuth message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum UserAuthType {
            [pbr::OriginalName("ADMIN")] Admin = 0,
            [pbr::OriginalName("SAML")] Saml = 1,
            [pbr::OriginalName("GCP")] Gcp = 2,
          }

          public sealed partial class SAMLUserMetadata : pb::IMessage<SAMLUserMetadata>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SAMLUserMetadata> _parser = new pb::MessageParser<SAMLUserMetadata>(() => new SAMLUserMetadata());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SAMLUserMetadata> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SAMLUserMetadata() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SAMLUserMetadata(SAMLUserMetadata other) : this() {
              username_ = other.username_;
              lastValidatedAt_ = other.lastValidatedAt_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SAMLUserMetadata Clone() {
              return new SAMLUserMetadata(this);
            }

            /// <summary>Field number for the "username" field.</summary>
            public const int UsernameFieldNumber = 1;
            private string username_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Username {
              get { return username_; }
              set {
                username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "last_validated_at" field.</summary>
            public const int LastValidatedAtFieldNumber = 2;
            private long lastValidatedAt_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long LastValidatedAt {
              get { return lastValidatedAt_; }
              set {
                lastValidatedAt_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SAMLUserMetadata);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SAMLUserMetadata other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Username != other.Username) return false;
              if (LastValidatedAt != other.LastValidatedAt) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Username.Length != 0) hash ^= Username.GetHashCode();
              if (LastValidatedAt != 0L) hash ^= LastValidatedAt.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Username.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Username);
              }
              if (LastValidatedAt != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastValidatedAt);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Username.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Username);
              }
              if (LastValidatedAt != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastValidatedAt);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Username.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
              }
              if (LastValidatedAt != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastValidatedAt);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SAMLUserMetadata other) {
              if (other == null) {
                return;
              }
              if (other.Username.Length != 0) {
                Username = other.Username;
              }
              if (other.LastValidatedAt != 0L) {
                LastValidatedAt = other.LastValidatedAt;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Username = input.ReadString();
                    break;
                  }
                  case 16: {
                    LastValidatedAt = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Username = input.ReadString();
                    break;
                  }
                  case 16: {
                    LastValidatedAt = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class GCPUserMetadata : pb::IMessage<GCPUserMetadata>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GCPUserMetadata> _parser = new pb::MessageParser<GCPUserMetadata>(() => new GCPUserMetadata());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GCPUserMetadata> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::io.nolog.net.api.auth.InternalAuthMetadata.Types.UserAuth.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GCPUserMetadata() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GCPUserMetadata(GCPUserMetadata other) : this() {
              username_ = other.username_;
              lastValidatedAt_ = other.lastValidatedAt_;
              jwtToken_ = other.jwtToken_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GCPUserMetadata Clone() {
              return new GCPUserMetadata(this);
            }

            /// <summary>Field number for the "username" field.</summary>
            public const int UsernameFieldNumber = 1;
            private string username_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Username {
              get { return username_; }
              set {
                username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "last_validated_at" field.</summary>
            public const int LastValidatedAtFieldNumber = 2;
            private long lastValidatedAt_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long LastValidatedAt {
              get { return lastValidatedAt_; }
              set {
                lastValidatedAt_ = value;
              }
            }

            /// <summary>Field number for the "jwt_token" field.</summary>
            public const int JwtTokenFieldNumber = 3;
            private string jwtToken_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string JwtToken {
              get { return jwtToken_; }
              set {
                jwtToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GCPUserMetadata);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GCPUserMetadata other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Username != other.Username) return false;
              if (LastValidatedAt != other.LastValidatedAt) return false;
              if (JwtToken != other.JwtToken) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Username.Length != 0) hash ^= Username.GetHashCode();
              if (LastValidatedAt != 0L) hash ^= LastValidatedAt.GetHashCode();
              if (JwtToken.Length != 0) hash ^= JwtToken.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Username.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Username);
              }
              if (LastValidatedAt != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastValidatedAt);
              }
              if (JwtToken.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(JwtToken);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Username.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Username);
              }
              if (LastValidatedAt != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastValidatedAt);
              }
              if (JwtToken.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(JwtToken);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Username.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
              }
              if (LastValidatedAt != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastValidatedAt);
              }
              if (JwtToken.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(JwtToken);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GCPUserMetadata other) {
              if (other == null) {
                return;
              }
              if (other.Username.Length != 0) {
                Username = other.Username;
              }
              if (other.LastValidatedAt != 0L) {
                LastValidatedAt = other.LastValidatedAt;
              }
              if (other.JwtToken.Length != 0) {
                JwtToken = other.JwtToken;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Username = input.ReadString();
                    break;
                  }
                  case 16: {
                    LastValidatedAt = input.ReadInt64();
                    break;
                  }
                  case 26: {
                    JwtToken = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Username = input.ReadString();
                    break;
                  }
                  case 16: {
                    LastValidatedAt = input.ReadInt64();
                    break;
                  }
                  case 26: {
                    JwtToken = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
